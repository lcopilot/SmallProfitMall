<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.itcast.dao.ProductDetailsDao">
    <resultMap id="ProductDatailsMap" type="cn.itcast.domain.ProductDatails.ProductDetailsResult">
        <id property="pid" column="ProductId"></id>
        <result property="productName" column="ProductName"></result>
        <result property="productSales" column="ProductSales"></result>
        <result property="weight" column="ProductWeight"></result>
        <result property="video" column="ProductVideo"></result>
        <result property="salesPrice" column="SalesPrice"></result>
        <result property="productPrice" column="ProductPrice"></result>
        <result property="productInventory" column="ProductInventory"></result>
        <result property="spikePrice" column="SpikePrice"></result>
        <result property="inventorys" column="ProductInventory"></result>
        <!--映射颜色集合-->
        <collection property="colour" ofType="java.lang.String">
            <constructor>
                <arg column="ProductColour"/>
            </constructor>
        </collection>
        <!--映射尺寸集合-->
        <collection property="size" ofType="java.lang.String">
            <constructor>
                <arg column="ProductSize"/>
            </constructor>
        </collection>
        <!--映射版本集合-->
        <collection property="version" ofType="java.lang.String">
            <constructor>
                <arg column="version"/>
            </constructor>
        </collection>
        <!--映射口味集合-->
        <collection property="taste" ofType="java.lang.String">
            <constructor>
                <arg column="ProductTaste"/>
            </constructor>
        </collection>
        <!--映射规格集合-->
        <collection property="specification" ofType="java.lang.String">
            <constructor>
                <arg column="Specification"></arg>
            </constructor>
        </collection>
        <!--映射种类集合-->
        <collection property="kind" ofType="java.lang.String">
            <constructor>
                <arg column="ProductKind"></arg>
            </constructor>
        </collection>
        <!--映射图片集合-->
        <collection property="imageSite" ofType="java.lang.String">
            <constructor>
                <arg column="ImageSite"></arg>
            </constructor>
        </collection>
        <!--映射套餐集合-->
        <collection property="combo" ofType="java.lang.String">
            <constructor>
                <arg column="ProductCombo"></arg>
            </constructor>
        </collection>

    </resultMap>

    <!--根据id查询商品-->
    <select id="fendProduct" resultMap="ProductDatailsMap">
           SELECT
                pb.*,
                pp.ProductPrice,
                pp.SpikePrice,
                pp.SalesPrice,
                pp.ProductSales,
                pp.ProductInventory,
                pi.ImageSite,
                pc.ProductColour,
                pco.ProductCombo,
                pk.ProductKind,
                ps.ProductSize,
                pt.ProductTaste,
                pv.version,
                pst.Specification
            from
			    ProductBasis pb
			LEFT JOIN
				ProductPrice pp
			ON
				pb.ProductId = pp.ProductId
			LEFT JOIN
				ProductImage pi
			ON
				pb.ProductId=pi.ProductId
			LEFT JOIN
				ProductColour pc
			ON
				pb.ProductId=pc.ProductId
			LEFT JOIN
				ProductCombo pco
			ON
				pb.ProductId=pco.ProductId
			LEFT JOIN
				ProductKind pk
			ON
				pb.ProductId=pk.ProductId
			LEFT JOIN
				ProductSize ps
			ON
				pb.ProductId = ps.ProductId
			LEFT JOIN
				ProductTaste pt
			ON
				pb.ProductId=pt.ProductId
			LEFT JOIN
				ProductVersion pv
			ON
				pb.ProductId=pv.ProductId
			LEFT JOIN
				ProductSpecification pst
			ON
				pb.ProductId=pst.ProductId
            WHERE
                pb.ProductId=#{userId}
    </select>

</mapper>